name: 🐧 Linux Builds
on: [push, pull_request]

jobs:
  linux-holistic:
    runs-on: "ubuntu-20.04"
    name: Linux Mediapipe Holistic OSC

    steps:
      - uses: actions/checkout@v2

      - name: Configure dependencies
        run: |
          sudo apt-get install apt-transport-https curl gnupg python3-numpy
          curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
          sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
          echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          sudo apt-get update && sudo apt-get install bazel-5.0

      - name: Compile opencv
        run: |
          chmod +x setup_opencv.sh && ./setup_opencv.sh

      - name: Compilation
        run: |
          bazel build -c opt --define MEDIAPIPE_DISABLE_GPU=1 mediapipe/examples/desktop/holistic_tracking:holistic_tracking_cpu

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}
          path: |
            ./bazel-bin/mediapipe/examples/desktop/holistic_tracking/holistic_tracking_cpu
            ./mediapipe/graphs/holistic_tracking
            ./mediapipe/modules
          retention-days: 14
  linux-iris:
    runs-on: "ubuntu-20.04"
    name: Linux Mediapipe OSC

    steps:
      - uses: actions/checkout@v2

      - name: Configure dependencies
        run: |
          sudo apt-get install apt-transport-https curl gnupg python3-numpy
          curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
          sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
          echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          sudo apt-get update && sudo apt-get install bazel-5.0

      - name: Compile opencv
        run: |
          chmod +x setup_opencv.sh && ./setup_opencv.sh

      - name: Compilation
        run: |
          bazel build -c opt --define MEDIAPIPE_DISABLE_GPU=1 mediapipe/examples/desktop/iris_tracking:iris_tracking_cpu

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}
          path: |
            ./bazel-bin/mediapipe/examples/desktop/iris_tracking/iris_tracking_cpu
            ./mediapipe/graphs/iris_tracking/iris_tracking_cpu.pbtxt
            ./mediapipe/modules/face_detection
            ./mediapipe/modules/face_landmark
            ./mediapipe/modules/iris_landmark
          retention-days: 14
  linux-hand-tracking-osc:
    runs-on: "ubuntu-20.04"
    name: Linux Mediapipe Hand Tracking OSC

    steps:
      - uses: actions/checkout@v2

      - name: Configure dependencies
        run: |
          sudo apt-get install apt-transport-https curl gnupg python3-numpy
          curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
          sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
          echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
          sudo apt-get update && sudo apt-get install bazel-5.0

      - name: Compile opencv
        run: |
          chmod +x setup_opencv.sh && ./setup_opencv.sh

      - name: Compilation
        run: |
          bazel build -c opt --define MEDIAPIPE_DISABLE_GPU=1 mediapipe/examples/desktop/holistic_tracking:holistic_tracking_cpu

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}
          path: |
            ./bazel-bin/mediapipe/examples/desktop/hand_tracking/hand_tracking_cpu
            ./mediapipe/graphs/hand_tracking_cpu
            ./mediapipe/modules
          retention-days: 14
